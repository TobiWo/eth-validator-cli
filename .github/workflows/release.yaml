---
name: "Build Cross-Platform Binaries"

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    name: "Build on ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        include:
          - os: "ubuntu-latest"
            TARGET: "linux-x64"
            PLATFORM: "linux"
          - os: "macos-latest"
            TARGET: "macos-x64"
            PLATFORM: "darwin"
          - os: "windows-latest"
            TARGET: "win-x64"
            PLATFORM: "win"

    steps:
      - uses: "actions/checkout@v4"

      - name: "Setup Node.js"
        uses: "actions/setup-node@v4"
        with:
          node-version: "22.12.0"
          cache: "npm"

      - name: "Install dependencies"
        run: "npm ci"

      - name: "Build application"
        run: "npm run build"

      - name: "Package application"
        run: "npx pkg . --targets node22-${{ matrix.TARGET }} --out-path ./bin"

      - name: "Create compressed archive"
        shell: "bash"
        run: |
          cd bin
          if [ "${{ matrix.PLATFORM }}" == "win" ]; then
            tar -czvf eth-validator-cli-${{ matrix.PLATFORM }}-x64-${{ github.ref_name }}.tar.gz eth-validator-cli.exe
          else
            tar -czvf eth-validator-cli-${{ matrix.PLATFORM }}-x64-${{ github.ref_name }}.tar.gz eth-validator-cli
          fi

      - name: "Upload artifact"
        uses: "actions/upload-artifact@v4"
        with:
          name: "eth-validator-cli-${{ matrix.PLATFORM }}-x64-${{ github.ref_name }}.tar.gz"
          path: "bin/eth-validator-cli-${{ matrix.PLATFORM }}-x64-${{ github.ref_name }}.tar.gz"
          retention-days: "5"

  release:
    name: "Release new version"
    needs: "build"
    runs-on: "ubuntu-latest"
    if: "github.event_name == 'create' && github.event.ref_type == 'tag'"

    steps:
      - name: "Download all artifacts"
        uses: "actions/download-artifact@v4"
        with:
          path: "release-assets"

      - name: "List downloaded artifact directories"
        run: "ls -R release-assets"

      - name: "Flatten artifacts"
        run: |
          find release-assets -type f -name "*.tar.gz" -exec mv {} . \;
          echo "Files in workspace root after flattening:"
          ls -la

      - name: "Upload release assets"
        uses: "softprops/action-gh-release@v2"
        with:
          tag_name: "${{ github.ref_name }}"
          generate_release_notes: "true"
          files: |
            eth-validator-cli-linux-x64-${{ github.ref_name }}.tar.gz
            eth-validator-cli-darwin-x64-${{ github.ref_name }}.tar.gz
            eth-validator-cli-win-x64-${{ github.ref_name }}.tar.gz
...
